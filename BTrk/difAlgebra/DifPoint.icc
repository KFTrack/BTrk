//--------------------------------------------------------------------------
// File and Version Information:
// 	$Id: DifPoint.icc,v 1.10 1999/03/24 21:49:03 rfaccini Exp $
//
// Description:
//	Class Implementation for |DifPoint| 
//      What do i do ?
// Environment:
//	Software developed for the BaBar Detector at the SLAC B-Factory.
//
// Author List:
//	A. Snyder
//
// Copyright Information:
//	Copyright (C) 1996	SLAC
//
//------------------------------------------------------------------------

#include "CLHEP/Vector/ThreeVector.h"

inline DifPoint::DifPoint(const HepPoint& p)  :
	DifVector(CLHEP::Hep3Vector(p.x(),p.y(),p.z()))
{}

inline DifPoint& DifPoint::operator=(const DifPoint& p) {
  x=p.x; y=p.y; z=p.z;
  return *this;  
}


inline DifPoint& DifPoint::operator+=(const DifVector& v) {
  x+=v.x; y+=v.y; z+=v.z;
  return *this;
}

inline DifPoint& DifPoint::operator-=(const DifVector& v) {
  x-=v.x; y-=v.y; z-=v.z;
  return *this;
}

inline DifPoint& DifPoint::operator*=(const DifNumber& n) {
  x*=n; y*=n; z*=n;
  return *this;
}

inline DifPoint& DifPoint::operator/=(const DifNumber& n) {
  x/=n; y/=n; z/=n;
  return *this;
}

inline HepPoint DifPoint::hepPoint()const{
  return HepPoint(x.number(),y.number(),z.number());
}

inline DifPoint operator+(const DifPoint& p,const DifVector& v) {
  return DifPoint(p.x+v.x,p.y+v.y,p.z+v.z);
}

inline DifPoint operator+(const DifVector& v,const DifPoint& p) {
  return DifPoint(p.x+v.x,p.y+v.y,p.z+v.z);
}

inline DifPoint operator-(const DifPoint& p,const DifVector& v) {
  return DifPoint(p.x-v.x,p.y-v.y,p.z-v.z);
}

inline DifVector operator-(const DifPoint& a,const DifPoint& b) {
  return DifVector(a.x-b.x,a.y-b.y,a.z-b.z);
}

inline DifPoint operator*(const DifPoint& p,const DifNumber& n) {
  return DifPoint(p.x*n,p.y*n,p.z*n);
}

inline DifPoint operator*(const DifNumber& n,const DifPoint& p) {
  return DifPoint(p.x*n,p.y*n,p.z*n);
}

inline DifPoint operator/(const DifPoint& p,const DifNumber &n) {
  return DifPoint(p.x/n,p.y/n,p.z/n);
}
